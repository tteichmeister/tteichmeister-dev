---
import BaseLayout from "../layouts/BaseLayout.astro";
import Avatar from "../images/avatar.png";
import { Image } from "astro:assets";
import { getProjects, getWorkExperiences } from "../utils/api";
import Resume from "../components/Resume.astro";
import Contact from "../components/Contact.astro";
import Divider from "../components/Divider.astro";
import Socials from "../components/Socials.astro";
import SeeAllLink from "../components/SeeAllLink.astro";
import AchievmentItem from "../components/AchievmentItem.astro";
import PageTitle from "../components/PageTitle.astro";
import { MAX_COUNT_ITEMS } from "../config";

const latestProjects = await getProjects(MAX_COUNT_ITEMS);
const latestWorkExperiences = await getWorkExperiences(MAX_COUNT_ITEMS);

function yearsWorked(startYear = 2011) {
  const now = new Date();
  const currentYear = now.getFullYear();
  return currentYear - startYear;
}
---

<BaseLayout>
  <div class="mb-4">
    <div class="flex flex-col-reverse md:flex-row">
      <div class="flex flex-col justify-center items-center md:items-start">
        <div>
          <h4 class="text-color-secondary text-md mb-2 typewriter">
            Hi, my name is
          </h4>
        </div>
        <h1 class="text-4xl md:text-6xl text-color-primary">Thomas</h1>
        <h1 class="text-4xl md:text-6xl text-color-secondary">Teichmeister</h1>
        <h2
          class="text-secondary tracking-wider ml-2 text-center md:text-start"
        >
          I'm a <a
            href="https://github.com/tteichmeister"
            class="underline-text hover:text-teal-700 dark:hover:text-teal-500 -z-1"
            >Software Developer</a
          > from Salzburg
        </h2>
      </div>
      <div
        class="flex flex-row-reverse md:flex-row mb-4 mx-auto md:my-auto md:text-start"
      >
        <Image
          src={Avatar}
          alt="Thomas Teichmeister"
          class="rounded-full"
          width="500"
        />
      </div>
    </div>
  </div>
  <p class="mb-16">
    Hi there! I am a software developer with more than {yearsWorked()} years of professional
    experience, and I am genuinely passionate about programming. <br />What
    motivates me most is the opportunity to take on new challenges, solve
    complex problems, and continuously expand my knowledge by learning new
    tools, concepts, and approaches. <br />
    <br /> Currently, I work at <a
      class="link"
      href="https://www.allplan.com/at/loesungen/herstellung-von-fertigteilen"
      >Allplan Ã–sterreich GmbH</a
    > as a <a class="link" href="/work/senior-software-developer-allplan"
      >Senior Software Developer</a
    >, where I mainly use C++, C# and Python in my daily work. Over the years, I
    have been involved in several key projects, taken on increasing
    responsibilities, and grown continuously both professionally and personally. <br
    /><br />
  </p>

  <section class="gap-2 mx-auto inline-flex items-center justify-center w-full">
    <Divider />
    <Resume />
    <Contact />
    <Divider />
  </section>
  <section class="mt-4">
    <Socials />
  </section>
  <section id="latest-projects" class="my-16 section fadeup">
    <div class="fadeup fade-delay">
      <PageTitle text="Latest projects" size="md" />
    </div>
    <ul class="w-full">
      {
        latestProjects.map((project) => (
          <li class="fadeup fade-delay">
            <AchievmentItem entry={project} />
          </li>
        ))
      }
    </ul>
    {
      latestProjects.length > MAX_COUNT_ITEMS && (
        <div class="mt-6 mx-6 fadeup fade-delay">
          <SeeAllLink text="All projects" url="/projects" />
        </div>
      )
    }
  </section>
  <section id="latest-work-experiences" class="section fadeup">
    <div class="fadeup fade-delay">
      <PageTitle text="Latest work experiences" size="md" />
    </div>
    <ul class="w-full">
      {
        latestWorkExperiences.map((work) => (
          <li class="fadeup fade-delay">
            <AchievmentItem entry={work} />
          </li>
        ))
      }
    </ul>
    {
      latestWorkExperiences.length > MAX_COUNT_ITEMS && (
        <div class="mt-6 mx-6 fadeup fade-delay">
          <SeeAllLink text="All experiences" url="/work" />
        </div>
      )
    }
  </section>
</BaseLayout>

<style>
  .typewriter {
    display: inline-block;
    overflow: hidden;
    letter-spacing: 2px;
    animation:
      typing 3s steps(30, end),
      blink 0.75s step-end infinite;
    white-space: nowrap;
    @apply border-r-2 border-solid border-teal-800 dark:border-slate-400;
    box-sizing: border-box;
  }

  @keyframes typing {
    from {
      width: 0%;
    }
    to {
      width: 100%;
    }
  }

  @keyframes blink {
    from,
    to {
      border-color: transparent;
    }
    50% {
      @apply border-teal-800 dark:border-slate-400;
    }
  }
  .fadeup {
    transform: translateY(50px);
    opacity: 0;
    transition-property: transform, opacity;
    transition-duration: 1s;
    transition-timing-function: linear;
  }
  .in-view {
    transform: none;
    opacity: 1;
  }
  .in-view.fadeup,
  .in-view .fadeup {
    transform: none;
    opacity: 1;
  }
</style>
<script>
  const observerOptions = {
    root: null,
    threshold: 0,
    rootMargin: "0px 0px -50px 0px",
  };
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.add("in-view");
        observer.unobserve(entry.target);
      }
    });
  }, observerOptions);

  window.addEventListener("DOMContentLoaded", (event) => {
    const sections = Array.from(document.getElementsByClassName("section"));
    for (let section of sections) {
      const fadeups = section.getElementsByClassName("fade-delay");
      for (let count = 0; count < fadeups.length; count++) {
        fadeups[count].setAttribute(
          "style",
          "transition-delay: " + count * 0.5 + "s"
        );
      }
      observer.observe(section);
    }
  });
</script>
