---
import BaseLayout from "../layouts/BaseLayout.astro";
import Avatar from "../images/avatar.jpeg";
import { getProjects, getWorkExperiences } from "../utils/api";
import Card from "../components/Card.astro";
import Resume from "../components/Resume.astro";
import Contact from "../components/Contact.astro";
import Divider from "../components/Divider.astro";
import Socials from "../components/Socials.astro";
import SeeAll from "../components/SeeAll.astro";

const maxCount = 2;
const latestProjects = await getProjects(maxCount);
const latestWorkExperiences = await getWorkExperiences(maxCount);
---

<BaseLayout>
  <div class="mb-4">
    <div class="flex flex-col-reverse md:flex-row">
      <div class="flex flex-col justify-center items-center md:items-start">
        <div>
          <h4 class="text-color-secondary text-md mb-2 typewriter">
            Hi, my name is
          </h4>
        </div>
        <h1 class={`text-4xl md:text-6xl text-color-primary`}>Thomas</h1>
        <h1 class={`text-4xl md:text-6xl text-color-secondary`}>
          Teichmeister
        </h1>
        <h2
          class={`text-secondary tracking-wider ml-2 text-center md:text-start`}
        >
          I'm a <a
            href="https://github.com/tteichmeister"
            class="underline-text hover:text-teal-700 dark:hover:text-teal-500"
            >Software Developer</a
          > from Salzburg ðŸ‡¦ðŸ‡¹
        </h2>
      </div>
      <div
        class="flex flex-row-reverse md:flex-row mb-4 mx-auto md:my-auto md:text-start"
      >
        <img
          src={Avatar}
          alt="Thomas Teichmeister"
          class="rounded-full"
          width="120"
          height="120"
        />
      </div>
    </div>
  </div>
  <p class="mb-16">
    I am an enthusiastic software developer since 11+ years. I mainly work with
    the technologies C++ and C# in my work but I'm enthusiastic about different
    areas and especially the web area.
  </p>

  <section class="gap-2 mx-auto inline-flex items-center justify-center w-full">
    <Divider />
    <Resume />
    <Contact />
    <Divider />
  </section>
  <section class="mt-4">
    <Socials />
  </section>
  <section id="latest-projects" class="my-16 section fadeup">
    <h1
      class="text-4xl font-extrabold mb-12 mx-2 text-slate-800 dark:text-slate-200 text-center fadeup fade-delay"
    >
      Latest projects
    </h1>
    <ul class="w-full">
      {
        latestProjects.map((project) => (
          <li class="fadeup fade-delay">
            <Card
              title={project.data.title}
              link={`/projects/${project.slug}`}
              shortDescription={project.data.description}
              subtitle={`${project.data.fromDate} - ${project.data.toDate}${
                project.data.location ? " | " + project.data.location : ""
              }`}
            />
          </li>
        ))
      }
    </ul>
    <div class="mt-6 mx-6 fadeup fade-delay">
      <SeeAll text="All projects" url="/projects" />
    </div>
  </section>
  <section id="latest-work-experiences" class="section fadeup">
    <h1
      class="text-4xl font-extrabold mb-12 mx-2 text-slate-800 dark:text-slate-200 text-center fadeup fade-delay"
    >
      Latest work experiences
    </h1>
    <ul class="w-full">
      {
        latestWorkExperiences.map((work) => (
          <li class="fadeup fade-delay">
            <Card
              title={`${work.data.title}, ${work.data.company}`}
              link={`/work/${work.slug}`}
              shortDescription={work.data.shortDescription}
              subtitle={`${work.data.fromDate} - ${
                work.data.toDate ? work.data.toDate : "now"
              }${work.data.location ? " | " + work.data.location : ""}`}
            />
          </li>
        ))
      }
    </ul>
    <div class="mt-6 mx-6 fadeup fade-delay">
      <SeeAll text="All experiences" url="/work" />
    </div>
  </section>
</BaseLayout>

<style>
  .typewriter {
    display: inline-block;
    overflow: hidden;
    letter-spacing: 2px;
    animation: typing 3s steps(30, end), blink 0.75s step-end infinite;
    white-space: nowrap;
    @apply border-r-2 border-solid border-teal-800 dark:border-slate-400;
    box-sizing: border-box;
  }

  @keyframes typing {
    from {
      width: 0%;
    }
    to {
      width: 100%;
    }
  }

  @keyframes blink {
    from,
    to {
      border-color: transparent;
    }
    50% {
      @apply border-teal-800 dark:border-slate-400;
    }
  }
  .fadeup {
    transform: translateY(50px);
    opacity: 0;
    transition-property: transform, opacity;
    transition-duration: 1s;
    transition-timing-function: linear;
  }
  .in-view {
    transform: none;
    opacity: 1;
  }
  .in-view.fadeup,
  .in-view .fadeup {
    transform: none;
    opacity: 1;
  }
</style>
<script>
  const observerOptions = {
    root: null,
    threshold: 0,
    rootMargin: "0px 0px -50px 0px",
  };
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.add("in-view");
        observer.unobserve(entry.target);
      }
    });
  }, observerOptions);

  window.addEventListener("DOMContentLoaded", (event) => {
    const sections = Array.from(document.getElementsByClassName("section"));
    for (let section of sections) {
      const fadeups = section.getElementsByClassName("fade-delay");
      for (let count = 0; count < fadeups.length; count++) {
        fadeups[count].setAttribute(
          "style",
          "transition-delay: " + count * 0.5 + "s"
        );
      }
      observer.observe(section);
    }
  });
</script>
